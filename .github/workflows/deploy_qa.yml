name: Deploy QA environment

on:
  push:
    branches: ["main"]

jobs:
  dev-deploy:
    runs-on: ubuntu-latest
    name: Deploy QA environment
    steps:
      - uses: actions/checkout@v3
      - name: Set Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Generate DEPLOYMENT_TAG
        id: generate-tag
        run: |
          BRANCH_NAME=$(echo $GITHUB_REF | sed 's/refs\/heads\///')  # Extract branch name from GITHUB_REF
          CURRENT_DATE=$(date +'%Y-%m-%d-%H.%M')
          DEPLOYMENT_TAG="QA-$BRANCH_NAME-$CURRENT_DATE"
          echo "DEPLOYMENT_TAG=${DEPLOYMENT_TAG}" >> "$GITHUB_ENV"

          echo "DEPLOYMENT_TAG=${DEPLOYMENT_TAG}" >> .env
          cat .env

      - name: yarn install
        uses: borales/actions-yarn@v4
        with:
          cmd: install

      # Install dfx.
      - name: Install dfx
        run: |
          DFX_VERSION=0.14.3 sh -ci "$(curl -fsSL https://sdk.dfinity.org/install.sh)"
          dfx --version

      - name: Set up dfx identity
        run: |
          mkdir -p ~/.config/dfx/identity/default/
          echo "$IC_IDENTITY_FILE" > ~/.config/dfx/identity/default/identity.pem
          dfx identity get-principal
          cat ~/.config/dfx/identity/default/identity.pem
        env:
          IC_IDENTITY_FILE: ${{ secrets.IC_IDENTITY_FILE_QA }}

      - name: Install vessel
        run: |
          wget https://github.com/dfinity/vessel/releases/download/v0.6.4/vessel-linux64
          mv vessel-linux64 vessel
          chmod +x vessel
          mv vessel /usr/local/bin/.
          vessel --version

      - name: create-wallet_qa
        run: |
          dfx start --background
          dfx canister create wallet_qa
          dfx build wallet_qa

      # Deploy using dfx. Ensure you handle any configuration or environment specifics.
      - name: Run deployment script

        run: ./scripts/deployment/gh_actions_deploy.sh
        env:
          DEV_ENV: qa
          OLD_MODCLUB_INSTANCE: la3yy-gaaaa-aaaah-qaiuq-cai

      - name: Add tag after successful deployment
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          git tag $DEPLOYMENT_TAG
          git push origin $DEPLOYMENT_TAG

      - name: Show success message
        run: echo success!
