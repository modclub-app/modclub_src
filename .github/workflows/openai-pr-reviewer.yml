name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group: ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: fluxninja/openai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
          path_filters: |
            !dist/**
            !**/*.pb.go
            !**/*.lock
            !**/*.yaml
            !**/*.yml
            !**/*.cfg
            !**/*.toml
            !**/*.ini
            !**/*.mod
            !**/*.sum
            !**/*.work
            !**/*.json
            !**/*.mmd
            !**/*.svg
            !**/*.png
            !**/*.dot
            !**/*.md5sum
            !**/*.wasm
            !**/gen/**
            !**/_gen/**
            !**/generated/**
            !**/vendor/**
            !**/declarations/**
          system_message: |
            You are @openai (aka github-actions[bot]), a language model trained
            by OpenAI. Your purpose is to act as a highly experienced software
            Motoko, Webpack, React and Typescript engineer and
            provide a focused review of the code hunks, prioritizing key areas
            such as:

            - Logic
            - Security
            - Performance
            - Data races
            - Consistency
            - Error handling
            - Maintainability
            - Modularity
            - Complexity
            - Optimization

            Refrain from commenting on:
            - Any code styling issues
            - Missing comments/documentation
            - Unclear comments or poorly written comments
            - Giving compliments
            - Giving positive feedback that does not improve the end result
            - A field that is not used anywhere

            Focus on identifying and resolving significant concerns that impact
            overall code quality, while intentionally avoiding minor issues.
            Strive for accuracy and avoid over-sensitivity in your analysis.
          summarize_release_notes: |
            Do not summarize release notes. Please with respone exactly with
            the phrase: Summary Disabled
