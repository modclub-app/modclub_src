name: "PR Build"

on:
  pull_request:
    branches: ["main"]

jobs:
  scan:
    name: gitleaks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: gitleaks/gitleaks-action@v2
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE}}

  build-canister:
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.ref_name }}

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: yarn install
        uses: borales/actions-yarn@v4
        with:
          cmd: install

      - name: Install dfx
        run: |
          DFX_VERSION=0.18.0 DFXVM_INIT_YES=true sh -ci "$(curl -fsSL https://sdk.dfinity.org/install.sh)"
          source "$HOME/.local/share/dfx/env"
          echo "$HOME/.local/share/dfx/bin" >> $GITHUB_PATH
          dfx --version
          rustup target add wasm32-unknown-unknown

      - name: Set up dfx identity
        run: |
          mkdir -p ~/.config/dfx/identity/default/
          echo "$IC_IDENTITY_FILE" > ~/.config/dfx/identity/default/identity.pem
          dfx identity get-principal
          cat ~/.config/dfx/identity/default/identity.pem
        env:
          IC_IDENTITY_FILE: ${{ secrets.IC_IDENTITY_FILE_QA }}

      - name: Install mops
        uses: ZenVoich/setup-mops@v1

      - name: dfx start
        run: |
          dfx start --background

      - name: Build BE canisters
        run: |
          source scripts/deployment/build_utils.sh
          source scripts/utils.sh
          DEV_ENV=qa create_canisters qa && build_be_canisters_quick qa local

      - name: generate declaration
        run: |
          source scripts/utils.sh
          generate_declarations qa

      - name: Build FE canisters
        run: |
          source scripts/deployment/build_utils.sh
          source scripts/utils.sh
          build_fe_canisters qa

      - name: Check result
        run: |
          tree .dfx -P '*.wasm'
