type ModclubProvider = 
 service {
   addAdmin: (principal) -> ();
   addRule: (text) -> ();
   deregister: () -> (text);
   greet: (text) -> (text);
   onlyOwner: (principal) -> ();
   register: (text, text) -> ();
   submitImage: (text, vec nat8, text, text) -> (text);
   submitText: (text, text, opt text) -> (text);
   subscribe: () -> ();
   test: () -> (text);
   testDataCanisterStorage: () -> (principal, principal, text);
   updateSettings: (nat, nat) -> ();
   voteResult: (ContentResult) -> () oneway;
 };
type ContentStatus = 
 variant {
   approved;
   rejected;
   reviewRequired;
 };
type ContentResult = 
 record {
   sourceId: text;
   status: ContentStatus;
 };
service : () -> ModclubProvider
