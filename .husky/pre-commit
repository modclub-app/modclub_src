#!/usr/bin/env sh

# Get the name of the current branch
current_branch=$(git symbolic-ref --short HEAD)
# Define the main branch name (e.g., "main" or "master")
main_branch="main"
# Check if the current branch is the main branch
if [ "$current_branch" = "$main_branch" ]; then
    echo "Error: You cannot commit directly to the main branch."
    echo "Please create a feature branch and submit a pull request for review."
    exit 1
fi

. "$(dirname -- "$0")/_/husky.sh"

is_snake_case() {
  if echo "$1" | grep -Eq '^[a-z0-9]+(_[a-z0-9]+)*$'; then
    return 0 # true
  else
    return 1 # false
  fi
}

# Check each staged file name
for file in $(git diff --cached --name-only --diff-filter=ACMR); do
  # Skip files in the .husky directory
  if [[ "$file" == .husky/* ]]; then
    continue
  fi

  # Only process .sh files
  if [[ "$file" != *.sh ]]; then
    continue
  fi

  filename=$(basename "$file")
  if ! is_snake_case "$filename"; then
    echo "Error: File name '$filename' does not adhere to snake_case convention."
    exit 1
  fi
done


npx pretty-quick --staged
cd new_frontend && npm run lint:fix